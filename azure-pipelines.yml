# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pr: none

parameters:
- name: buildPhpVersion
  displayName: Build PHP version
  type: string
  default: 8.0
- name: buildImportTool
  displayName: Build import tools
  type: string
  default: data
- name: buildVersion
  displayName: Which version to build
  type: string
  default: develop
- name: platforms
  displayName: Build platforms
  type: string
  default: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/386

jobs:
- job: Jobbie
  timeoutInMinutes: 360
  workspace:
    clean: all
  pool:
    vmImage: 'ubuntu-16.04'
    name: Default
  steps:
  - checkout: self
    persistCredentials: true
  - script: |
      cd ImportToolImage

      # script for counter
      git switch -c main
      git branch --set-upstream-to=origin/main main
      echo "Update counters"
      BUILDNR=$(<"counter.txt")
      BUILDNR=$((BUILDNR + 1))
      echo $BUILDNR > counter.txt
      echo $(date '+%d-%m-%Y %T %Z') > date.txt
      git pull
      git status
      git add counter.txt
      git add date.txt
      git commit -m "Auto-update build files for build #${BUILDNR}."
      git push
      # end counter script.

      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes i
      docker buildx create --name firefly_iii_builder
      docker buildx inspect firefly_iii_builder --bootstrap
      docker buildx use firefly_iii_builder
      echo $(DOCKERPASSWORD) | docker login --username $(DOCKERUSERNAME) --password-stdin

      LABEL=${{ parameters.buildVersion }}

      # if the version is an alpha version, push to "alpha":
      if [[ ${{ parameters.buildVersion }} == *"alpha"* ]]; then
        LABEL="alpha"
      fi

      # if the version is a beta version, push to "beta":
      if [[ ${{ parameters.buildVersion }} == *"beta"* ]]; then
        LABEL="beta"
      fi

      if [[ ${{ parameters.buildVersion }} != *"beta"* && ${{ parameters.buildVersion }} != *"alpha"* && ${{ parameters.buildVersion }} != *"develop"* ]]; then
        LABEL="latest"
      fi

      if [[ ${{ parameters.buildVersion }} != "develop" ]]; then
        echo "Version is '${{ parameters.buildVersion }}' so second label will be 'fireflyiii/${{ parameters.buildImportTool }}-importer:version-${{ parameters.buildVersion }}'."
        docker buildx build --no-cache --build-arg version=${{ parameters.buildVersion }} --build-arg apache_platform=${{ parameters.buildPhpVersion }} --build-arg importer=${{ parameters.buildImportTool }} --platform ${{ parameters.platforms }} -t fireflyiii/${{ parameters.buildImportTool }}-importer:version-${{ parameters.buildVersion }} --push . -f Dockerfile
      fi

      docker buildx build --no-cache --build-arg version=${{ parameters.buildVersion }} --build-arg apache_platform=${{ parameters.buildPhpVersion }} --build-arg importer=${{ parameters.buildImportTool }} --platform ${{ parameters.platforms }} -t fireflyiii/${{ parameters.buildImportTool }}-importer:$LABEL --push . -f Dockerfile
    displayName: 'Build!'

  - checkout: self
    clean: true